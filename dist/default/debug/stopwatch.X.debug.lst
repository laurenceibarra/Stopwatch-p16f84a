

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Apr 18 12:03:21 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F84A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x4E,2
    14     0000                     
    15                           ; Generated 12/10/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F84A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0000                     	;# 
    50     0001                     	;# 
    51     0002                     	;# 
    52     0003                     	;# 
    53     0004                     	;# 
    54     0005                     	;# 
    55     0006                     	;# 
    56     0008                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     0081                     	;# 
    61     0085                     	;# 
    62     0086                     	;# 
    63     0088                     	;# 
    64     0089                     	;# 
    65     0000                     	;# 
    66     0001                     	;# 
    67     0002                     	;# 
    68     0003                     	;# 
    69     0004                     	;# 
    70     0005                     	;# 
    71     0006                     	;# 
    72     0008                     	;# 
    73     0009                     	;# 
    74     000A                     	;# 
    75     000B                     	;# 
    76     0081                     	;# 
    77     0085                     	;# 
    78     0086                     	;# 
    79     0088                     	;# 
    80     0089                     	;# 
    81                           
    82                           	psect	idataBANK0
    83     00C8                     __pidataBANK0:
    84                           
    85                           ;initializer for _startFlag
    86     00C8  3401               	retlw	1
    87     0006                     _PORTBbits	set	6
    88     0006                     _PORTB	set	6
    89     0005                     _PORTA	set	5
    90     000B                     _INTCONbits	set	11
    91     0086                     _TRISB	set	134
    92     0085                     _TRISA	set	133
    93     0081                     _OPTION_REGbits	set	129
    94                           
    95                           	psect	cinit
    96     000C                     start_initialization:	
    97                           ; #config settings
    98                           
    99     000C                     __initialization:
   100                           
   101                           ; Initialize objects allocated to BANK0
   102     000C  20C8               	fcall	__pidataBANK0	;fetch initializer
   103     000D  0099               	movwf	__pdataBANK0& (0+127)
   104                           
   105                           ; Clear objects allocated to BANK0
   106     000E  0197               	clrf	__pbssBANK0& (0+127)
   107     000F  0198               	clrf	(__pbssBANK0+1)& (0+127)
   108     0010                     end_of_initialization:	
   109                           ;End of C runtime variable initialization code
   110                           
   111     0010                     __end_of__initialization:
   112     0010  0183               	clrf	3
   113     0011  288B               	ljmp	_main	;jump to C main() function
   114                           
   115                           	psect	bssBANK0
   116     0017                     __pbssBANK0:
   117     0017                     _curr_PORTB:
   118     0017                     	ds	1
   119     0018                     _prev_RB7:
   120     0018                     	ds	1
   121                           
   122                           	psect	dataBANK0
   123     0019                     __pdataBANK0:
   124     0019                     _startFlag:
   125     0019                     	ds	1
   126                           
   127                           	psect	cstackBANK0
   128     000C                     __pcstackBANK0:
   129     000C                     ?_main:
   130     000C                     ?_ISR:	
   131                           ; 1 bytes @ 0x0
   132                           
   133     000C                     ??_ISR:	
   134                           ; 1 bytes @ 0x0
   135                           
   136                           
   137                           ; 1 bytes @ 0x0
   138     000C                     	ds	5
   139     0011                     ISR@curr_RB7:
   140                           
   141                           ; 1 bytes @ 0x5
   142     0011                     	ds	1
   143     0012                     ??_main:
   144                           
   145                           ; 1 bytes @ 0x6
   146     0012                     	ds	3
   147     0015                     main@i:
   148                           
   149                           ; 2 bytes @ 0x9
   150     0015                     	ds	2
   151                           
   152                           	psect	maintext
   153     008B                     __pmaintext:	
   154 ;;
   155 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   156 ;;
   157 ;; *************** function _main *****************
   158 ;; Defined at:
   159 ;;		line 20 in file "newmain.c"
   160 ;; Parameters:    Size  Location     Type
   161 ;;		None
   162 ;; Auto vars:     Size  Location     Type
   163 ;;  i               2    9[BANK0 ] int 
   164 ;;  prev_RB7        1    0        unsigned char 
   165 ;; Return value:  Size  Location     Type
   166 ;;                  1    wreg      void 
   167 ;; Registers used:
   168 ;;		wreg, status,2, status,0, btemp+1
   169 ;; Tracked objects:
   170 ;;		On entry : B00/0
   171 ;;		On exit  : 0/0
   172 ;;		Unchanged: 0/0
   173 ;; Data sizes:     COMMON   BANK0
   174 ;;      Params:         0       0
   175 ;;      Locals:         0       2
   176 ;;      Temps:          0       3
   177 ;;      Totals:         0       5
   178 ;;Total ram usage:        5 bytes
   179 ;; Hardware stack levels required when called: 1
   180 ;; This function calls:
   181 ;;		Nothing
   182 ;; This function is called by:
   183 ;;		Startup code after reset
   184 ;; This function uses a non-reentrant model
   185 ;;
   186                           
   187     008B                     _main:	
   188                           ;psect for function _main
   189                           
   190     008B                     l663:	
   191                           ;incstack = 0
   192                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1]
   193                           
   194                           
   195                           ;newmain.c: 21:     OPTION_REGbits.INTEDG = 0;
   196     008B  1683               	bsf	3,5	;RP0=1, select bank1
   197     008C  1301               	bcf	1,6	;volatile
   198                           
   199                           ;newmain.c: 22:     OPTION_REGbits.nRBPU = 0;
   200     008D  1381               	bcf	1,7	;volatile
   201                           
   202                           ;newmain.c: 23:     INTCONbits.INTF = 0;
   203     008E  108B               	bcf	11,1	;volatile
   204                           
   205                           ;newmain.c: 24:     INTCONbits.INTE = 1;
   206     008F  160B               	bsf	11,4	;volatile
   207                           
   208                           ;newmain.c: 25:     INTCONbits.RBIF = 0;
   209     0090  100B               	bcf	11,0	;volatile
   210                           
   211                           ;newmain.c: 26:     INTCONbits.RBIE = 1;
   212     0091  158B               	bsf	11,3	;volatile
   213                           
   214                           ;newmain.c: 27:     INTCONbits.GIE = 1;
   215     0092  178B               	bsf	11,7	;volatile
   216     0093                     l665:
   217                           
   218                           ;newmain.c: 29:     TRISA = 0;
   219     0093  0185               	clrf	5	;volatile
   220     0094                     l667:
   221                           
   222                           ;newmain.c: 30:     TRISB = 0xff;
   223     0094  30FF               	movlw	255
   224     0095  0086               	movwf	6	;volatile
   225     0096                     l669:
   226                           
   227                           ;newmain.c: 31:     PORTA = 0xff;
   228     0096  30FF               	movlw	255
   229     0097  1283               	bcf	3,5	;RP0=0, select bank0
   230     0098  0085               	movwf	5	;volatile
   231     0099                     l671:
   232                           
   233                           ;newmain.c: 32:     curr_PORTB = PORTB;
   234     0099  0806               	movf	6,w	;volatile
   235     009A  0097               	movwf	_curr_PORTB	;volatile
   236     009B                     l673:
   237     009B                     l675:
   238                           
   239                           ;newmain.c: 36:         if(!PORTBbits.RB3){
   240     009B  1283               	bcf	3,5	;RP0=0, select bank0
   241     009C  1986               	btfsc	6,3	;volatile
   242     009D  289F               	goto	u141
   243     009E  28A0               	goto	u140
   244     009F                     u141:
   245     009F  289B               	goto	l675
   246     00A0                     u140:
   247     00A0                     l677:
   248                           
   249                           ;newmain.c: 37:             for(int i = 0; i < 16; i++){
   250     00A0  0195               	clrf	main@i
   251     00A1  0196               	clrf	main@i+1
   252     00A2                     l683:
   253                           
   254                           ;newmain.c: 38:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
   255     00A2  3052               	movlw	82
   256     00A3  1283               	bcf	3,5	;RP0=0, select bank0
   257     00A4  0094               	movwf	??_main+2
   258     00A5  302B               	movlw	43
   259     00A6  0093               	movwf	??_main+1
   260     00A7  3000               	movlw	0
   261     00A8  0092               	movwf	??_main
   262     00A9                     u277:
   263     00A9  0B92               	decfsz	??_main,f
   264     00AA  28A9               	goto	u277
   265     00AB  0B93               	decfsz	??_main+1,f
   266     00AC  28A9               	goto	u277
   267     00AD  0B94               	decfsz	??_main+2,f
   268     00AE  28A9               	goto	u277
   269     00AF  0000               	nop
   270     00B0                     l685:
   271                           
   272                           ;newmain.c: 39:                 PORTA--;
   273     00B0  3001               	movlw	1
   274     00B1  1283               	bcf	3,5	;RP0=0, select bank0
   275     00B2  0285               	subwf	5,f	;volatile
   276     00B3                     l687:
   277                           
   278                           ;newmain.c: 40:             }
   279     00B3  3001               	movlw	1
   280     00B4  0795               	addwf	main@i,f
   281     00B5  1803               	skipnc
   282     00B6  0A96               	incf	main@i+1,f
   283     00B7  3000               	movlw	0
   284     00B8  0796               	addwf	main@i+1,f
   285     00B9                     l689:
   286     00B9  0816               	movf	main@i+1,w
   287     00BA  3A80               	xorlw	128
   288     00BB  00CF               	movwf	btemp+1
   289     00BC  3080               	movlw	128
   290     00BD  024F               	subwf	btemp+1,w
   291     00BE  1D03               	skipz
   292     00BF  28C2               	goto	u155
   293     00C0  3010               	movlw	16
   294     00C1  0215               	subwf	main@i,w
   295     00C2                     u155:
   296     00C2  1C03               	skipc
   297     00C3  28C5               	goto	u151
   298     00C4  28C6               	goto	u150
   299     00C5                     u151:
   300     00C5  28A2               	goto	l683
   301     00C6                     u150:
   302     00C6  289B               	goto	l675
   303     00C7  280B               	ljmp	start
   304     00C8                     __end_of_main:
   305                           
   306                           	psect	text1
   307     0012                     __ptext1:	
   308 ;; *************** function _ISR *****************
   309 ;; Defined at:
   310 ;;		line 46 in file "newmain.c"
   311 ;; Parameters:    Size  Location     Type
   312 ;;		None
   313 ;; Auto vars:     Size  Location     Type
   314 ;;  curr_RB7        1    5[BANK0 ] unsigned char 
   315 ;; Return value:  Size  Location     Type
   316 ;;                  1    wreg      void 
   317 ;; Registers used:
   318 ;;		wreg, status,2, status,0
   319 ;; Tracked objects:
   320 ;;		On entry : 0/0
   321 ;;		On exit  : 0/0
   322 ;;		Unchanged: 0/0
   323 ;; Data sizes:     COMMON   BANK0
   324 ;;      Params:         0       0
   325 ;;      Locals:         0       1
   326 ;;      Temps:          0       5
   327 ;;      Totals:         0       6
   328 ;;Total ram usage:        6 bytes
   329 ;; Hardware stack levels used: 1
   330 ;; This function calls:
   331 ;;		Nothing
   332 ;; This function is called by:
   333 ;;		Interrupt level 1
   334 ;; This function uses a non-reentrant model
   335 ;;
   336                           
   337     0012                     _ISR:	
   338                           ;psect for function _ISR
   339                           
   340     0012                     i1l691:
   341                           
   342                           ;newmain.c: 47:     INTCONbits.GIE = 0;
   343     0012  138B               	bcf	11,7	;volatile
   344                           
   345                           ;newmain.c: 48:     if(INTCONbits.INTF && INTCONbits.INTE) {
   346     0013  1C8B               	btfss	11,1	;volatile
   347     0014  2816               	goto	u16_21
   348     0015  2817               	goto	u16_20
   349     0016                     u16_21:
   350     0016  2821               	goto	i1l40
   351     0017                     u16_20:
   352     0017                     i1l693:
   353     0017  1E0B               	btfss	11,4	;volatile
   354     0018  281A               	goto	u17_21
   355     0019  281B               	goto	u17_20
   356     001A                     u17_21:
   357     001A  2821               	goto	i1l40
   358     001B                     u17_20:
   359     001B                     i1l695:
   360                           
   361                           ;newmain.c: 49:         PORTA = 0xff;
   362     001B  30FF               	movlw	255
   363     001C  0085               	movwf	5	;volatile
   364                           
   365                           ;newmain.c: 50:         PORTB;
   366     001D  0806               	movf	6,w	;volatile
   367     001E                     i1l697:
   368                           
   369                           ;newmain.c: 51:         __nop();
   370     001E  0000               	nop
   371     001F                     i1l699:
   372                           
   373                           ;newmain.c: 52:         INTCONbits.INTF = 0;
   374     001F  108B               	bcf	11,1	;volatile
   375                           
   376                           ;newmain.c: 53:     }
   377     0020  2883               	goto	i1l47
   378     0021                     i1l40:	
   379                           ;newmain.c: 54:     else if(INTCONbits.RBIF && INTCONbits.RBIE ){
   380                           
   381     0021  1C0B               	btfss	11,0	;volatile
   382     0022  2824               	goto	u18_21
   383     0023  2825               	goto	u18_20
   384     0024                     u18_21:
   385     0024  2883               	goto	i1l47
   386     0025                     u18_20:
   387     0025                     i1l701:
   388     0025  1D8B               	btfss	11,3	;volatile
   389     0026  2828               	goto	u19_21
   390     0027  2829               	goto	u19_20
   391     0028                     u19_21:
   392     0028  2883               	goto	i1l47
   393     0029                     u19_20:
   394     0029                     i1l703:
   395                           
   396                           ;newmain.c: 55:         _delay((unsigned long)((50)*(64000000/4000.0)));
   397     0029  3005               	movlw	5
   398     002A  008E               	movwf	??_ISR+2
   399     002B  300F               	movlw	15
   400     002C  008D               	movwf	??_ISR+1
   401     002D  30F1               	movlw	241
   402     002E  008C               	movwf	??_ISR
   403     002F                     u28_27:
   404     002F  0B8C               	decfsz	??_ISR,f
   405     0030  282F               	goto	u28_27
   406     0031  0B8D               	decfsz	??_ISR+1,f
   407     0032  282F               	goto	u28_27
   408     0033  0B8E               	decfsz	??_ISR+2,f
   409     0034  282F               	goto	u28_27
   410                           
   411                           ;newmain.c: 56:         curr_PORTB = PORTB;
   412     0035  1283               	bcf	3,5	;RP0=0, select bank0
   413     0036  0806               	movf	6,w	;volatile
   414     0037  0097               	movwf	_curr_PORTB	;volatile
   415     0038                     i1l705:
   416                           
   417                           ;newmain.c: 57:         char curr_RB7 = (curr_PORTB & 10000000) >> 7;
   418     0038  0817               	movf	_curr_PORTB,w	;volatile
   419     0039  008C               	movwf	??_ISR
   420     003A  3007               	movlw	7
   421     003B                     u20_25:
   422     003B  1003               	clrc
   423     003C  0C8C               	rrf	??_ISR,f
   424     003D  3EFF               	addlw	-1
   425     003E  1D03               	skipz
   426     003F  283B               	goto	u20_25
   427     0040  080C               	movf	??_ISR,w
   428     0041  3901               	andlw	1
   429     0042  0091               	movwf	ISR@curr_RB7
   430     0043                     i1l707:
   431                           
   432                           ;newmain.c: 60:         if(prev_RB7 == 1 && curr_RB7 == 0) {
   433     0043  0318               	decf	_prev_RB7,w	;volatile
   434     0044  1D03               	btfss	3,2
   435     0045  2847               	goto	u21_21
   436     0046  2848               	goto	u21_20
   437     0047                     u21_21:
   438     0047  2875               	goto	i1l725
   439     0048                     u21_20:
   440     0048                     i1l709:
   441     0048  0811               	movf	ISR@curr_RB7,w
   442     0049  1D03               	btfss	3,2
   443     004A  284C               	goto	u22_21
   444     004B  284D               	goto	u22_20
   445     004C                     u22_21:
   446     004C  2875               	goto	i1l725
   447     004D                     u22_20:
   448     004D                     i1l44:	
   449                           ;newmain.c: 61:             while(1){
   450                           
   451                           
   452                           ;newmain.c: 62:                 if(!PORTBbits.RB0) {
   453     004D  1806               	btfsc	6,0	;volatile
   454     004E  2850               	goto	u23_21
   455     004F  2851               	goto	u23_20
   456     0050                     u23_21:
   457     0050  2860               	goto	i1l713
   458     0051                     u23_20:
   459     0051                     i1l711:
   460                           
   461                           ;newmain.c: 63:                     PORTA = 0xff;
   462     0051  30FF               	movlw	255
   463     0052  0085               	movwf	5	;volatile
   464                           
   465                           ;newmain.c: 64:                     _delay((unsigned long)((1000)*(64000000/4000.0)));
   466     0053  3052               	movlw	82
   467     0054  008E               	movwf	??_ISR+2
   468     0055  302B               	movlw	43
   469     0056  008D               	movwf	??_ISR+1
   470     0057  3000               	movlw	0
   471     0058  008C               	movwf	??_ISR
   472     0059                     u29_27:
   473     0059  0B8C               	decfsz	??_ISR,f
   474     005A  2859               	goto	u29_27
   475     005B  0B8D               	decfsz	??_ISR+1,f
   476     005C  2859               	goto	u29_27
   477     005D  0B8E               	decfsz	??_ISR+2,f
   478     005E  2859               	goto	u29_27
   479     005F  0000               	nop
   480     0060                     i1l713:
   481                           
   482                           ;newmain.c: 66:                 if(!PORTBbits.RB3){
   483     0060  1283               	bcf	3,5	;RP0=0, select bank0
   484     0061  1986               	btfsc	6,3	;volatile
   485     0062  2864               	goto	u24_21
   486     0063  2865               	goto	u24_20
   487     0064                     u24_21:
   488     0064  284D               	goto	i1l44
   489     0065                     u24_20:
   490     0065                     i1l715:
   491                           
   492                           ;newmain.c: 67:                     INTCONbits.RBIF = 0;
   493     0065  100B               	bcf	11,0	;volatile
   494     0066                     i1l717:
   495                           
   496                           ;newmain.c: 68:                     curr_PORTB = PORTB;
   497     0066  0806               	movf	6,w	;volatile
   498     0067  0097               	movwf	_curr_PORTB	;volatile
   499     0068                     i1l719:
   500                           
   501                           ;newmain.c: 69:                     prev_RB7 = (curr_PORTB & 10000000) >> 7;
   502     0068  0817               	movf	_curr_PORTB,w	;volatile
   503     0069  008C               	movwf	??_ISR
   504     006A  3007               	movlw	7
   505     006B                     u25_25:
   506     006B  1003               	clrc
   507     006C  0C8C               	rrf	??_ISR,f
   508     006D  3EFF               	addlw	-1
   509     006E  1D03               	skipz
   510     006F  286B               	goto	u25_25
   511     0070  080C               	movf	??_ISR,w
   512     0071  3901               	andlw	1
   513     0072  0098               	movwf	_prev_RB7	;volatile
   514     0073                     i1l721:
   515                           
   516                           ;newmain.c: 70:                     INTCONbits.RBIF = 0;
   517     0073  100B               	bcf	11,0	;volatile
   518     0074  2883               	goto	i1l47
   519     0075                     i1l725:
   520                           
   521                           ;newmain.c: 76:         curr_PORTB = PORTB;
   522     0075  0806               	movf	6,w	;volatile
   523     0076  0097               	movwf	_curr_PORTB	;volatile
   524     0077                     i1l727:
   525                           
   526                           ;newmain.c: 77:         prev_RB7 = (curr_PORTB & 10000000) >> 7;
   527     0077  0817               	movf	_curr_PORTB,w	;volatile
   528     0078  008C               	movwf	??_ISR
   529     0079  3007               	movlw	7
   530     007A                     u26_25:
   531     007A  1003               	clrc
   532     007B  0C8C               	rrf	??_ISR,f
   533     007C  3EFF               	addlw	-1
   534     007D  1D03               	skipz
   535     007E  287A               	goto	u26_25
   536     007F  080C               	movf	??_ISR,w
   537     0080  3901               	andlw	1
   538     0081  0098               	movwf	_prev_RB7	;volatile
   539     0082                     i1l729:
   540                           
   541                           ;newmain.c: 78:         INTCONbits.RBIF = 0;
   542     0082  100B               	bcf	11,0	;volatile
   543     0083                     i1l47:
   544     0083  1283               	bcf	3,5	;RP0=0, select bank0
   545     0084  0810               	movf	??_ISR+4,w
   546     0085  008A               	movwf	10
   547     0086  0E0F               	swapf	??_ISR+3,w
   548     0087  0083               	movwf	3
   549     0088  0ECE               	swapf	btemp,f
   550     0089  0E4E               	swapf	btemp,w
   551     008A  0009               	retfie
   552     008B                     __end_of_ISR:
   553     004E                     btemp	set	78	;btemp
   554     004E                     wtemp0	set	78
   555                           
   556                           	psect	intentry
   557     0004                     __pintentry:	
   558                           ;incstack = 0
   559                           ; Regs used in _ISR: [wreg+status,2+status,0]
   560                           
   561     0004                     interrupt_function:
   562     004E                     saved_w	set	btemp
   563     0004  00CE               	movwf	btemp
   564     0005  0E03               	swapf	3,w
   565     0006  1283               	bcf	3,5	;RP0=0, select bank0
   566     0007  008F               	movwf	??_ISR+3
   567     0008  080A               	movf	10,w
   568     0009  0090               	movwf	??_ISR+4
   569     000A  2812               	ljmp	_ISR
   570                           
   571                           	psect	config
   572                           
   573                           ;Config register CONFIG @ 0x2007
   574                           ;	Oscillator Selection bits
   575                           ;	FOSC = EXTRC, RC oscillator
   576                           ;	Watchdog Timer
   577                           ;	WDTE = OFF, WDT disabled
   578                           ;	Power-up Timer Enable bit
   579                           ;	PWRTE = ON, Power-up Timer is enabled
   580                           ;	Code Protection bit
   581                           ;	CP = OFF, Code protection disabled
   582     2007                     	org	8199
   583     2007  3FF3               	dw	16371

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            66     11      14

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0      47
                                              6 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  6     6      0      23
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               42      B       E       3       21.2%
BITBANK0            42      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       E       6        0.0%
ABS                  0      0       E       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              40      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Apr 18 12:03:21 2024

                    l671 0099                      l663 008B                      l673 009B  
                    l665 0093                      l683 00A2                      l675 009B  
                    l667 0094                      l685 00B0                      l677 00A0  
                    l669 0096                      l687 00B3                      l689 00B9  
                    u140 00A0                      u141 009F                      u150 00C6  
                    u151 00C5                      u155 00C2                      _ISR 0012  
                    u277 00A9                     ?_ISR 000C                     i1l40 0021  
                   i1l44 004D                     i1l47 0083                     _main 008B  
                   btemp 004E                     start 000B                    ??_ISR 000C  
                  ?_main 000C                    i1l701 0025                    i1l711 0051  
                  i1l703 0029                    i1l721 0073                    i1l713 0060  
                  i1l705 0038                    i1l715 0065                    i1l707 0043  
                  i1l717 0066                    i1l709 0048                    i1l725 0075  
                  i1l727 0077                    i1l719 0068                    i1l729 0082  
                  i1l691 0012                    i1l693 0017                    i1l695 001B  
                  i1l697 001E                    i1l699 001F                    u20_25 003B  
                  u21_20 0048                    u21_21 0047                    u22_20 004D  
                  u22_21 004C                    u23_20 0051                    u23_21 0050  
                  u24_20 0065                    u16_20 0017                    u24_21 0064  
                  u16_21 0016                    u17_20 001B                    u17_21 001A  
                  u25_25 006B                    u18_20 0025                    u18_21 0024  
                  u26_25 007A                    u19_20 0029                    u19_21 0028  
                  _PORTA 0005                    _PORTB 0006                    u28_27 002F  
                  u29_27 0059                    _TRISA 0085                    _TRISB 0086  
                  main@i 0015                    pclath 000A                    status 0003  
                  wtemp0 004E          __initialization 000C             __end_of_main 00C8  
                 ??_main 0012                   saved_w 004E  __end_of__initialization 0010  
           __pidataBANK0 00C8              ISR@curr_RB7 0011           _OPTION_REGbits 0081  
             __pbssBANK0 0017               __pmaintext 008B               __pintentry 0004  
             _curr_PORTB 0017                  __ptext1 0012     end_of_initialization 0010  
              _PORTBbits 0006      start_initialization 000C              __end_of_ISR 008B  
            __pdataBANK0 0019                ___latbits 0000            __pcstackBANK0 000C  
      interrupt_function 0004                _startFlag 0019                 _prev_RB7 0018  
             _INTCONbits 000B                 intlevel1 0000  
